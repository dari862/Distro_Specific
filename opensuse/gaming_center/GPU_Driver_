#!/bin/sh
REPO_ID="rpmfusion-nonfree-nvidia-driver"

app_name="GPU Drivers"
if [ "$(lspci | grep -i nvidia | grep VGA -c)" != "0" ];then
	_cuda_=""
	akmod_nvidia="akmod-nvidia"
	say 'do you want to add Cuda Support?' 'Y' && _cuda_="xorg-x11-drv-nvidia-cuda"
	
	enable_repo "$REPO_ID"
	
	say 'Updating sources...' 1
	Package_update_ 
	
	if [ $? -eq 1 ];then
		say "There was a problem make your linux ${app_name}." 
		break
	fi

	Package_installer_ nvidia $akmod_nvidia $_cuda_ || continue
	
	say
	say "if system notification regarding Nvidia driver conflicts appeard reboot will fix it."
	say
	say "NVIDIA Drivers installed you need to reboot your pc."
fi
	
if [ "$(lspci | grep -i amd | grep VGA -c)" != "0" ];then
	Package_installer_ libgl1-mesa-dri xserver-xorg-video-ati xserver-xorg-video-amdgpu mesa-vulkan-drivers vkbasalt || continue
fi
	
if [ "$(lspci | grep -i intel | grep VGA -c)" != "0" ];then
	Package_installer_ xserver-xorg-video-intel intel-gpu-tools || continue
	my-superuser mkdir -p /etc/X11/xorg.conf.d/
	my-superuser tee /etc/X11/xorg.conf.d/20-intel.conf <<- EOF > /dev/null
	Section "Device"
	Identifier  "Intel Graphics"
	Driver      "Intel"
	Option      "AccelMethod"  "sna"
	Option      "TearFree""True"
	Option      "Tiling""True"
	Option      "SwapbuffersWait" "True"
	#Option      "AccelMethod"  "uxa"
	EndSection
	EOF
fi

if [ "$(lspci | grep "VGA compatible controller" | grep VMware -c)" != "0" ];then
	say "This is VM"
fi

say "Creating Check File (GPU_Drivers_ready)"
my-superuser touch /usr/share/my_stuff/system_files/GPU_Drivers_ready
/usr/share/my_stuff/bin/not_add_2_path/create_pipemenu/preferences.sh || failed_to_run "failed to run create_pipemenu/preferences.sh"
