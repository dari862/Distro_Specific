#!/bin/sh

app_name="GPU Drivers"
if [ "$(lspci | grep -i nvidia | grep VGA -c)" != "0" ];then
	_cuda_=""
	_kernel_open_dkms_=""
	say '  do you want to add Cuda Support?' 'Y' && _cuda_="cuda"
	say 'do you want to install opensource nvidia-kernel?' 'Y' && _kernel_open_dkms_="cuda"
fi

if [ -f /etc/os-release ];then
    # freedesktop.org and systemd
    . /etc/os-release
    version_="$(echo "${VERSION_ID}" | sed 's/.//g')"
    distro_name_="$ID"
    distro_name_and_ver_=$ID$version_
elif [ -f /etc/lsb-release ];then
    # For some versions of Debian/Ubuntu without lsb_release command
    . /etc/lsb-release
    distro_name_="$DISTRIB_ID"
    distro_name_and_ver_=$DISTRIB_ID$DISTRIB_RELEASE
else
    # Fall back to uname, e.g. "Linux <version>", also works for BSD, etc.
    distro_name_="$(uname -s)"
    distro_name_and_ver_=$(uname -s)$(uname -r)
fi

if [ "$distro_name_" = "ubuntu" ];then
	Package_installer_ software-properties-common || continue
	my-superuser add-apt-repository -y universe
	my-superuser add-apt-repository -y multiverse
fi

if [ "$(lspci | grep -i nvidia | grep VGA -c)" != "0" ];then
	download_key "gpg" "https://developer.download.nvidia.com/compute/cuda/repos/$distro_name_and_ver_/x86_64/3bf863cc.pub" "/usr/share/keyrings/nvidia-drivers.gpg"
	echo "deb [signed-by=/usr/share/keyrings/nvidia-drivers.gpg] https://developer.download.nvidia.com/compute/cuda/repos/$distro_name_and_ver_/x86_64/ /" | my-superuser tee /etc/apt/sources.list.d/nvidia-drivers.list > /dev/null 2>&1
	
	say 'Updating sources...' 1
	Package_update_ 
	
	if [ $? -eq 1 ];then
		say "There was a problem make your linux ${app_name}." 
		break
	fi

	Package_installer_ nvidia-driver nvidia-smi nvidia-settings $_kernel_open_dkms_ $_cuda_ || continue
	
	say
	say "if system notification regarding Nvidia driver conflicts appeard reboot will fix it."
	say
	say "NVIDIA Drivers installed you need to reboot your pc."
fi
	
if [ "$(lspci | grep -i amd | grep VGA -c)" != "0" ];then
	Package_installer_ libgl1-mesa-dri xserver-xorg-video-ati xserver-xorg-video-amdgpu mesa-vulkan-drivers vkbasalt || continue
fi
	
if [ "$(lspci | grep -i intel | grep VGA -c)" != "0" ];then
	Package_installer_ xserver-xorg-video-intel intel-gpu-tools || continue
	my-superuser mkdir -p /etc/X11/xorg.conf.d/
	my-superuser tee /etc/X11/xorg.conf.d/20-intel.conf <<- EOF > /dev/null
	Section "Device"
	Identifier  "Intel Graphics"
	Driver      "Intel"
	Option      "AccelMethod"  "sna"
	Option      "TearFree""True"
	Option      "Tiling""True"
	Option      "SwapbuffersWait" "True"
	#Option      "AccelMethod"  "uxa"
	EndSection
	EOF
fi

if [ "$(lspci | grep "VGA compatible controller" | grep VMware -c)" != "0" ];then
	say "This is VM"
fi

say "Creating Check File (GPU_Drivers_ready)"
my-superuser touch /usr/share/my_stuff/system_files/GPU_Drivers_ready
/usr/share/my_stuff/bin/not_add_2_path/create_pipemenu/preferences.sh || failed_to_run "failed to run create_pipemenu/preferences.sh"
